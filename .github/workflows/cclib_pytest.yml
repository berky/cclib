---
# yamllint disable rule:line-length
name: run tests

# yamllint disable-line rule:truthy
on: [push, pull_request]

jobs:

  run-tests:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ['3.6', '3.7']
    steps:
      - name: Install SWIG and Git
        run: |
          sudo apt-get update && sudo apt-get install -y -qq git swig
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }} with conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          miniconda-version: "latest"
          python-version: ${{ matrix.python-version }}
          channels: psi4, conda-forge
      - name: Install conda deps
        shell: bash -l {0}
        run: |
          conda config --set always_yes true --set changeps1 false --set channel_priority flexible --set quiet true
          conda info -a
          conda install ci-psi4 psi4 openbabel pytest-cov pytest-shutil h5py
          python -m pip install pyscf
          python -m pip install git+https://github.com/theochem/iodata.git
          conda list
          conda env export
      - name: Install dependencies
        shell: bash -l {0}
        run: |
          python -m pip install -r requirements.txt
      - name: Install cclib
        shell: bash -l {0}
        run: |
          which python
          python -m pip install .
      - name: Test with pytest
        shell: bash -l {0}
        run: |
          which python
          env | sort
          bash .github/scripts/run_pytest.bash
      - name: Store coverage report
        uses: actions/upload-artifact@v2
        with:
          name: pytest-coverage-report
          path: htmlcov

  build-docs:
    runs-on: ubuntu-20.04
    needs: "run-tests"
    steps:
      - name: Get Coverage Report artifact
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        uses: actions/download-artifact@v2
        with:
          name: pytest-coverage-report
          path: docs/sphinx/coverage
      - name: Build docs
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        uses: ammaraskar/sphinx-action@master
        with:
          docs-folder: "doc/sphinx"
          pre-build-command: "python -m pip install git+https://github.com/cclib/sphinx_rtd_theme.git"
          build-command: "make default"
      - name: Store completed docs
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        uses: actions/upload-artifact@v2
        with:
          name: html-docs
          path: doc/sphinx/_build/html

  push-docs:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-20.04
    needs: "build-docs"
    steps:
      - name: Get docs html
        uses: actions/download-artifact@v2
        with:
          name: html-docs
          path: html-docs
      - name: Commit documentation changes
        run: |
          git clone https://github.com/cclib/cclib.git --branch gh-pages --single-branch gh-pages
          cp -r html-docs/* gh-pages/
          cd gh-pages
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Commit: ${GITHUB_SHA}" || true
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch: gh-pages
          directory: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
